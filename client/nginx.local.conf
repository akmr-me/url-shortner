server {
    listen       80;
    listen  [::]:80;
    server_name  localhost;

    root /usr/share/nginx/html;
    index index.html index.htm;

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }

    # Javascript and CSS files
    location ~* \.(?:css|js)$ {
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    location / {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        try_files $uri $uri/ @backend;
        error_page 405 = @backend;  # Static pages don't take POST requests
        error_page 502 = @backend;
    }

    location @backend {
        proxy_pass http://localhost:4001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

# server {
#     listen 80;
#     listen [::]:80;
#     server_name localhost;

#     root /usr/share/nginx/html;
#     index index.html index.htm;

#     # Media: images, icons, video, audio, HTC
#     location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
#         expires 1M;
#         access_log off;
#         add_header Cache-Control "public";
#     }

#     # Javascript and CSS files
#     location ~* \.(?:css|js)$ {
#         expires 1y;
#         access_log off;
#         add_header Cache-Control "public";
#     }

#     # Main entry point for the application
#     location / {
#         try_files $uri $uri/ /index.html;
#     }

#     # Proxying API requests to backend
#     location /* {
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $remote_addr;
#         proxy_cache_bypass $http_upgrade;
#         proxy_pass http://localhost:4001;
#     }
# }


# server {
#     listen       80;
#     listen  [::]:80;
#     server_name  localhost;

#     #access_log  /var/log/nginx/host.access.log  main;

#     location / {
#         root   /usr/share/nginx/html;
#         index  index.html index.htm;
#     }

#     #error_page  404              /404.html;

#     # redirect server error pages to the static page /50x.html
#     #
#     error_page   500 502 503 504  /50x.html;
#     location = /50x.html {
#         root   /usr/share/nginx/html;
#     }

#     # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#     #
#     #location ~ \.php$ {
#     #    proxy_pass   http://127.0.0.1;
#     #}

#     # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#     #
#     #location ~ \.php$ {
#     #    root           html;
#     #    fastcgi_pass   127.0.0.1:9000;
#     #    fastcgi_index  index.php;
#     #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#     #    include        fastcgi_params;
#     #}

#     # deny access to .htaccess files, if Apache's document root
#     # concurs with nginx's one
#     #
#     #location ~ /\.ht {
#     #    deny  all;
#     #}
# }

















# server {
#          server_name http://localhost:80;
#          root /srv;
#          index  index.html index.htm;

#          # Media: images, icons, video, audio, HTC
#          location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
#            expires 1M;
#            access_log off;
#            add_header Cache-Control "public";
#          }

#          # Javascript and CSS files
#          location ~* \.(?:css|js)$ {
#              expires 1y;
#              access_log off;
#            add_header Cache-Control "public";
#        }
# location / {
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection 'upgrade';
#          proxy_set_header Host $host;
#          proxy_set_header Connection $http_connection;
#          add_header Cache-Control "no-store, no-cache, must-revalidate";
#          try_files $uri $uri/ @backend;
#          error_page 405 @backend;#static page dont't take POST request
#          error_page 502 @backend;
#    }

# location @backend {
#          proxy_pass http://localhost:4001;
#          proxy_http_version 1.1;
#          proxy_set_header Upgrade $http_upgrade;
#          proxy_set_header Connection 'upgrade';
#          proxy_set_header X-Forwarded-For $remote_addr;
#          proxy_set_header Host $host;
#          proxy_cache_bypass $http_upgrade;
#      }


#  }

# server {
    

#    server_name http://localhost:80;
#    listen 80;
#   #  return 404; # managed by Certbot

#  }
